---
export interface Props {
    variant: "small-gray"| "large-white"| "medium-white";
    href: string;
}
let className = "";
const { variant = "small-gray",  href } = Astro.props;

if (variant === "small-gray") {
  className = "btn-small-gray";
} else if (variant === "large-white") {
  className = "btn-large-white";
} else if (variant === "medium-white") {
  className = "btn-medium-white";
} else {
  className = "btn-small-gray";
}
---
{href ? (
  <a href={href} class={className}>
    <slot />
  </a>
) : (
  <button type="button" class={className}>
    <slot />
  </button>
)}

<style>
  .btn-small-gray {
    padding: 5px 10px;
    font-size: 12px;
    color: white;
    background-color: rgba(128, 128, 128, 0.3);
    border: none;
    border-radius: 3px;
    text-decoration: none;
    cursor: pointer;
    margin-top: 10px;
    width: auto;
    display: inline-block;
  }
  .btn-large-white {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 93%;
  background-color: white;
  color: black;
  border: solid 1px gray;
  padding: 12px;
  border-radius: 8px;
  font-weight: 400;
  cursor: pointer;
  transition: background-color 0.3s ease;
  }

.btn-medium-white {
  display: inline-block;
  padding: 10px 20px;
  border-radius: 5px;
  background-color: white;
  color: black;
  text-align: center;
  font-size: 1rem;
  transition: background-color 0.3s ease, color 0.3s ease;
  cursor: pointer;
}
.btn-large-white:hover, .btn-medium-white:hover {
    background-color: #efecec;
}

</style>
